<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FactFactory.Versioned</name>
    </assembly>
    <members>
        <member name="T:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase">
            <summary>
            Base class for versioned fact container.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.#ctor(System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact})">
            <summary>
            Constructor.
            </summary>
            <param name="facts">An array of facts to add to the container.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.#ctor(System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact},System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="facts">An array of facts to add to the container.</param>
            <param name="isReadOnly"></param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.Add``1(``0)">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.AddRange(System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact})">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.TryGetFactByVersion``1(``0@,GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact)">
            <summary>
            Try to return a fact of <typeparamref name="TFact"/> type with version equal to <paramref name="version"/>.
            </summary>
            <typeparam name="TFact">Type of fact you need.</typeparam>
            <param name="fact">fact.</param>
            <param name="version">Version.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.TryGetFact``1(``0@)">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.ContainsByVersion``1(GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact)">
            <summary>
            Does an <typeparamref name="TFact"/> type fact with version <paramref name="version"/>.
            </summary>
            <typeparam name="TFact"></typeparam>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.Contains``1">
            <summary>
            Does an <typeparamref name="TFact"/> type fact without version.
            </summary>
            <typeparam name="TFact"></typeparam>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.GetFactByVersion``1(GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact)">
            <summary>
            Return a fact of <typeparamref name="TFact"/> type with version equal to <paramref name="version"/>.
            </summary>
            <typeparam name="TFact">Type of fact you need.</typeparam>
            <param name="version">Version.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.GetFact``1">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.RemoveByVersion``1(GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact)">
            <summary>
            Remove a fact of <typeparamref name="TFact"/> type with version equal to <paramref name="version"/>.
            </summary>
            <typeparam name="TFact">Type of fact you need.</typeparam>
            <param name="version">Version.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.Remove``1">
            <inheritdoc/>
        </member>
        <member name="T:GetcuReone.FactFactory.Versioned.Constants.ErrorCode">
            <summary>
            Codes for errors in work <see cref="T:GetcuReone.FactFactory.Versioned.VersionedFactFactoryBase`4"/>.
            </summary>
        </member>
        <member name="P:GetcuReone.FactFactory.Versioned.Constants.ErrorCode.VersionNotFound">
            <summary>
            'VersionNotFound'. No fact was found in the container with information about the required version.
            </summary>
        </member>
        <member name="P:GetcuReone.FactFactory.Versioned.Constants.ErrorCode.VersionConflict">
            <summary>
            Version conflict.
            </summary>
        </member>
        <member name="P:GetcuReone.FactFactory.Versioned.Constants.ErrorCode.OnlyOneVersionFact">
            <summary>
            There should be only one version fact.
            </summary>
        </member>
        <member name="T:GetcuReone.FactFactory.Versioned.Constants.VersionedFactParametersCodes">
            <summary>
            Default codes for fact parameter.
            </summary>
        </member>
        <member name="F:GetcuReone.FactFactory.Versioned.Constants.VersionedFactParametersCodes.Version">
            <summary>
            Version of the fact.
            </summary>
        </member>
        <member name="T:GetcuReone.FactFactory.Versioned.Entities.VersionedFactContainer">
            <summary>
            Versioned fact container.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Entities.VersionedFactContainer.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Entities.VersionedFactContainer.#ctor(System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact})">
            <summary>
            Constructor.
            </summary>
            <param name="facts">An array of facts to add to the container.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Entities.VersionedFactContainer.#ctor(System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact},System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="facts">An array of facts to add to the container.</param>
            <param name="isReadOnly"></param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Entities.VersionedFactContainer.Copy">
            <summary>
            Get copy container.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GetcuReone.FactFactory.Versioned.Facades.SingleEntityOperations.VersionedSingleEntityOperationsFacade">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Facades.SingleEntityOperations.VersionedSingleEntityOperationsFacade.CompareFactRules``3(``0,``0,GetcuReone.FactFactory.Interfaces.Context.IWantActionContext{``1,``2})">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Facades.SingleEntityOperations.VersionedSingleEntityOperationsFacade.CompareRulesByVersion``3(``0,``0,GetcuReone.FactFactory.Interfaces.Context.IWantActionContext{``1,``2})">
            <summary>
            Compare rules by version.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Facades.SingleEntityOperations.VersionedSingleEntityOperationsFacade.GetCompatibleRules``4(``0,System.Collections.Generic.IEnumerable{``1},GetcuReone.FactFactory.Interfaces.Context.IWantActionContext{``2,``3})">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Facades.SingleEntityOperations.VersionedSingleEntityOperationsFacade.CompatibleRule``4(``0,``1,GetcuReone.FactFactory.Interfaces.Context.IWantActionContext{``2,``3})">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Facades.SingleEntityOperations.VersionedSingleEntityOperationsFacade.CanExtractFact``3(GetcuReone.FactFactory.Interfaces.IFactType,``0,GetcuReone.FactFactory.Interfaces.Context.IWantActionContext{``1,``2})">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Facades.SingleEntityOperations.VersionedSingleEntityOperationsFacade.GetRequiredTypesOfFacts``3(``0,GetcuReone.FactFactory.Interfaces.Context.IWantActionContext{``1,``2})">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Facades.SingleEntityOperations.VersionedSingleEntityOperationsFacade.GetRequireFacts``3(``0,GetcuReone.FactFactory.Interfaces.Context.IWantActionContext{``1,``2})">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Facades.SingleEntityOperations.VersionedSingleEntityOperationsFacade.CompareFacts(GetcuReone.FactFactory.Interfaces.IFact,GetcuReone.FactFactory.Interfaces.IFact)">
            <summary>
            Comparison of facts.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Facades.SingleEntityOperations.VersionedSingleEntityOperationsFacade.TryCalculateFact``3(GetcuReone.FactFactory.Interfaces.Operations.Entities.NodeByFactRule{``0},GetcuReone.FactFactory.Interfaces.Context.IWantActionContext{``1,``2},GetcuReone.FactFactory.Interfaces.IFact@)">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Facades.SingleEntityOperations.VersionedSingleEntityOperationsFacade.NeedRecalculateFact``3(``0,GetcuReone.FactFactory.Interfaces.Context.IWantActionContext{``1,``2})">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Facades.SingleEntityOperations.VersionedSingleEntityOperationsHelper.IsCompatibleWithVersion``1(``0,GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact)">
            <summary>
            Compatible with version.
            </summary>
            <typeparam name="TFact"></typeparam>
            <param name="fact"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="T:GetcuReone.FactFactory.Versioned.Helpers.VersionedFactFactoryHelper">
            <summary>
            Helper for <see cref="T:GetcuReone.FactFactory.Versioned.VersionedFactFactoryBase`4"/>
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Helpers.VersionedFactFactoryHelper.GetVersionOrNull``1(``0)">
            <summary>
            Get version fact.
            </summary>
            <typeparam name="TFact"></typeparam>
            <param name="fact"></param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Helpers.VersionedFactFactoryHelper.HasVersion``1(``0,GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact)">
            <summary>
            The fact has a version.
            </summary>
            <typeparam name="TFact"></typeparam>
            <param name="fact"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Helpers.VersionedFactFactoryHelper.GetVersionFactType(System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFactType})">
            <summary>
            Return the fact type of a version.
            </summary>
            <param name="factTypes"></param>
            <returns></returns>
        </member>
        <member name="T:GetcuReone.FactFactory.Versioned.SpecialFacts.VersionBase`1">
            <summary>
            Base class for version facts.
            </summary>
        </member>
        <member name="P:GetcuReone.FactFactory.Versioned.SpecialFacts.VersionBase`1.ValueVersion">
            <summary>
            Value version.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.SpecialFacts.VersionBase`1.#ctor(`0)">
            <summary>
            Constructor.
            </summary>
            <param name="version">version</param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.SpecialFacts.VersionBase`1.CreateIncompatibilityVersionException(GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact)">
            <summary>
            Error creating version incompatibility.
            </summary>
            <param name="versionedFact"></param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.SpecialFacts.VersionBase`1.CompareTo(GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact)">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.SpecialFacts.VersionBase`1.op_Implicit(GetcuReone.FactFactory.Versioned.SpecialFacts.VersionBase{`0})~`0">
            <summary>
            Extract <see cref="P:GetcuReone.FactFactory.Versioned.SpecialFacts.VersionBase`1.ValueVersion"/>.
            </summary>
            <param name="fact"></param>
        </member>
        <member name="T:GetcuReone.FactFactory.Versioned.VersionedFactFactory">
            <summary>
            Default implementation of versioned fact factory <see cref="T:GetcuReone.FactFactory.Versioned.VersionedFactFactoryBase`4"/>.
            </summary>
        </member>
        <member name="P:GetcuReone.FactFactory.Versioned.VersionedFactFactory.Container">
            <summary>
            Fact container.
            </summary>
        </member>
        <member name="P:GetcuReone.FactFactory.Versioned.VersionedFactFactory.Rules">
            <summary>
            Rule collection.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.VersionedFactFactory.#ctor(System.Func{System.Collections.Generic.List{GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact}})">
            <summary>
            Constructor.
            </summary>
            <param name="getAllVersionFactsFunc">Function that returns all versioned facts used in the rules.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.VersionedFactFactory.GetAllVersions">
            <summary>
            Returns instances of all used versions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.VersionedFactFactory.CreateWantAction(System.Action{System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact}},System.Collections.Generic.List{GetcuReone.FactFactory.Interfaces.IFactType})">
            <inheritdoc/>
        </member>
        <member name="T:GetcuReone.FactFactory.Versioned.VersionedFactFactoryBase`4">
            <summary>
            Base class for versioned fact factory.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.VersionedFactFactoryBase`4.GetAllVersions">
            <summary>
            Returns instances of all used versions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.VersionedFactFactoryBase`4.GetDefaultFacts(`3)">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.VersionedFactFactoryBase`4.GetSingleEntityOperations">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.VersionedFactFactoryBase`4.DeriveFact``2">
            <summary>
            Derive <typeparamref name="TFact"/> with version.
            </summary>
            <typeparam name="TFact">Type of desired fact.</typeparam>
            <typeparam name="TVersion">Type of version fact.</typeparam>
            <returns></returns>
        </member>
        <member name="T:GetcuReone.FactFactory.Versioned.Versions.DateTimeVersionBase">
            <summary>
            Base class for <see cref="T:System.DateTime"/> based version facts.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Versions.DateTimeVersionBase.#ctor(System.DateTime)">
            <summary>
            Constructor.
            </summary>
            <param name="version">version</param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Versions.DateTimeVersionBase.CompareTo(GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact)">
            <inheritdoc/>
        </member>
        <member name="T:GetcuReone.FactFactory.Versioned.Versions.IntVersionBase">
            <summary>
            Base class for <see cref="T:System.Int32"/> based version facts.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Versions.IntVersionBase.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="version">version</param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Versions.IntVersionBase.CompareTo(GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact)">
            <inheritdoc/>
        </member>
        <member name="T:GetcuReone.FactFactory.Versioned.Versions.LongVersionBase">
            <summary>
            Base class for <see cref="T:System.Int64"/> based version facts.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Versions.LongVersionBase.#ctor(System.Int64)">
            <summary>
            Constructor.
            </summary>
            <param name="version">version</param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Versions.LongVersionBase.CompareTo(GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact)">
            <inheritdoc/>
        </member>
        <member name="T:GetcuReone.FactFactory.Versioned.Versions.UintVersionBase">
            <summary>
            Base class for <see cref="T:System.UInt32"/> based version facts.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Versions.UintVersionBase.#ctor(System.UInt32)">
            <summary>
            Constructor.
            </summary>
            <param name="version">version</param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Versions.UintVersionBase.CompareTo(GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact)">
            <inheritdoc/>
        </member>
        <member name="T:GetcuReone.FactFactory.Versioned.Versions.UlongVersionBase">
            <summary>
            Base class for <see cref="T:System.UInt64"/> based version facts.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Versions.UlongVersionBase.#ctor(System.UInt64)">
            <summary>
            Constructor.
            </summary>
            <param name="version">version</param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.Versions.UlongVersionBase.CompareTo(GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact)">
            <inheritdoc/>
        </member>
    </members>
</doc>
