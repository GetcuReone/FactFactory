<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FactFactory.Versioned.BaseEntities</name>
    </assembly>
    <members>
        <member name="T:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase">
            <summary>
            Base class for versioned fact container.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.#ctor(System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact})">
            <summary>
            Constructor.
            </summary>
            <param name="facts">An array of facts to add to the container.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.#ctor(System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact},System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="facts">An array of facts to add to the container.</param>
            <param name="isReadOnly"></param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.Add``1(``0)">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.AddRange(System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact})">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.TryGetFactByVersion``1(``0@,GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact)">
            <summary>
            Try to return a fact of <typeparamref name="TFact"/> type with version equal to <paramref name="version"/>.
            </summary>
            <typeparam name="TFact">Type of fact you need.</typeparam>
            <param name="fact">fact.</param>
            <param name="version">Version.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.TryGetFact``1(``0@)">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.ContainsByVersion``1(GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact)">
            <summary>
            Does an <typeparamref name="TFact"/> type fact with version <paramref name="version"/>.
            </summary>
            <typeparam name="TFact"></typeparam>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.Contains``1">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.Contains``1(``0)">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.GetFactByVersion``1(GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact)">
            <summary>
            Return a fact of <typeparamref name="TFact"/> type with version equal to <paramref name="version"/>.
            </summary>
            <typeparam name="TFact">Type of fact you need.</typeparam>
            <param name="version">Version.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.GetFact``1">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.RemoveByVersion``1(GetcuReone.FactFactory.Versioned.Interfaces.IVersionFact)">
            <summary>
            Remove a fact of <typeparamref name="TFact"/> type with version equal to <paramref name="version"/>.
            </summary>
            <typeparam name="TFact">Type of fact you need.</typeparam>
            <param name="version">Version.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.Versioned.BaseEntities.VersionedFactContainerBase.Remove``1">
            <inheritdoc/>
        </member>
    </members>
</doc>
