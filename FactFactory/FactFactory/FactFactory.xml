<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FactFactory</name>
    </assembly>
    <members>
        <member name="T:GetcuReone.FactFactory.FactFactoryBase`5">
            <summary>
            Base class for fact factory.
            </summary>
        </member>
        <member name="P:GetcuReone.FactFactory.FactFactoryBase`5.WantActions">
            <summary>
            Want actions
            </summary>
        </member>
        <member name="P:GetcuReone.FactFactory.FactFactoryBase`5.Container">
            <inheritdoc/>
        </member>
        <member name="P:GetcuReone.FactFactory.FactFactoryBase`5.Rules">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.GetFactType``1">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.GetDefaultFacts(`1)">
            <summary>
            Return the fact set that will be contained in the default container.
            </summary>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.Derive">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.DeriveFact``1">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.ValidateContainer">
            <summary>
            Validation container.
            </summary>
            <returns>Copy <see cref="P:GetcuReone.FactFactory.FactFactoryBase`5.Container"/></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.ValidateRules">
            <summary>
            Valudate <see cref="P:GetcuReone.FactFactory.FactFactoryBase`5.Rules"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.BuildTrees(System.Collections.Generic.List{`4},`1,`3)">
            <summary>
            Build trees.
            </summary>
            <param name="wantActions"></param>
            <param name="container"></param>
            <param name="rules"></param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.OnWantActionCalculated(`4,`1)">
            <summary>
            Action calculation completion handler
            </summary>
            <param name="wantAction"></param>
            <param name="container"></param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.OnFactCalculatedForWantAction(GetcuReone.FactFactory.Interfaces.IFactType,`1,`4)">
            <summary>
            Fact calculation event handler for an <paramref name="wantAction"/>.
            </summary>
            <param name="factType">Type calculated fact.</param>
            <param name="container">Container.</param>
            <param name="wantAction">The action for which the fact was calculated.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.OnDeriveFinished(System.Collections.Generic.List{`4},`1)">
            <summary>
            Event handler method 'derive finished'. It is executed at the end of the <see cref="M:GetcuReone.FactFactory.FactFactoryBase`5.Derive"/> method.
            </summary>
            <param name="wantActions">List of desired actions.</param>
            <param name="container">Container.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.CreateWantAction(System.Action{GetcuReone.FactFactory.Interfaces.IFactContainer{`0}},System.Collections.Generic.List{GetcuReone.FactFactory.Interfaces.IFactType})">
            <summary>
            Creation method <typeparamref name="TWantAction"/>.
            </summary>
            <param name="wantAction">Action taken after deriving a fact.</param>
            <param name="factTypes">Facts required to launch an action.</param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.NeedRecalculateFact(`2,`1,`4,`0@)">
            <summary>
            The method determines whether the fact should be recounted.
            </summary>
            <param name="rule">Rule for calculating the fact.</param>
            <param name="container">Fact container.</param>
            <param name="wantAction">The initial action for which the parameters are calculated.</param>
            <param name="needRemoveFact">If the method returns the true, then this fact will be removed from the container. There will be no deletion if the fact is empty.</param>
            <returns>True - fact needs to be recalculated.</returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.TryDeriveTreesForWantAction(System.Collections.Generic.List{GetcuReone.FactFactory.InnerEntities.FactRuleTree{`0,`2}}@,`4,`1,`3,System.Collections.Generic.List{GetcuReone.FactFactory.Interfaces.SpecialFacts.IConditionFact}@,GetcuReone.FactFactory.Exceptions.Entities.DeriveErrorDetail{`0}@)">
            <summary>
            We are trying to calculate a tree by which we find a fact
            </summary>
            <param name="treesResult">found trees</param>
            <param name="wantAction">desired action information</param>
            <param name="container">fact container</param>
            <param name="rules">rule collection</param>
            <param name="deriveErrorDetail"></param>
            <param name="specialFacts"></param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.GetFactRuleTrees(GetcuReone.FactFactory.Interfaces.IFactType,System.Collections.Generic.IList{`2})">
            <summary>
            Returns trees. Their number is equal to the number of rules that can derive the necessary <paramref name="wantFact"/>.
            </summary>
            <param name="wantFact">derive fact</param>
            <param name="rules">rule set</param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.SyncComputedNodeForLevelTreeAndCheckGoneRoot(GetcuReone.FactFactory.InnerEntities.FactRuleTree{`0,`2},System.Int32,System.Collections.Generic.List{GetcuReone.FactFactory.InnerEntities.FactRuleNode{`0,`2}},`4,`1)">
            <summary>
            Synchronizes the level of nodes. Searches for finished nodes and removes them from the level. 
            Returns the truth if, invoking itself, the method has passed the root of the tree
            </summary>
            <param name="factRuleTree"></param>
            <param name="level"></param>
            <param name="computedNodes"></param>
            <param name="wantAction"></param>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.GetCorrectFact``1(GetcuReone.FactFactory.Interfaces.IFactContainer{`0},System.Collections.Generic.IReadOnlyCollection{GetcuReone.FactFactory.Interfaces.IFactType})">
            <summary>
            Return the correct fact.
            </summary>
            <typeparam name="TFact"></typeparam>
            <param name="container"></param>
            <param name="inputFactTypes"></param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.WantFact(`4)">
            <summary>
            Requesting a desired fact through action.
            </summary>
            <param name="wantAction"></param>
            <exception cref="T:GetcuReone.FactFactory.Exceptions.FactFactoryException">The action has already been requested before.</exception>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.WantFact``1(System.Action{``0})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.WantFact``2(System.Action{``0,``1})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.WantFact``3(System.Action{``0,``1,``2})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.WantFact``4(System.Action{``0,``1,``2,``3})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.WantFact``5(System.Action{``0,``1,``2,``3,``4})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.WantFact``6(System.Action{``0,``1,``2,``3,``4,``5})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.WantFact``7(System.Action{``0,``1,``2,``3,``4,``5,``6})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.WantFact``8(System.Action{``0,``1,``2,``3,``4,``5,``6,``7})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.WantFact``9(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.WantFact``10(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.WantFact``11(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.WantFact``12(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.WantFact``13(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <typeparam name="TFact13">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.WantFact``14(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <typeparam name="TFact13">Type fact.</typeparam>
            <typeparam name="TFact14">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.WantFact``15(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <typeparam name="TFact13">Type fact.</typeparam>
            <typeparam name="TFact14">Type fact.</typeparam>
            <typeparam name="TFact15">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`5.WantFact``16(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <typeparam name="TFact13">Type fact.</typeparam>
            <typeparam name="TFact14">Type fact.</typeparam>
            <typeparam name="TFact15">Type fact.</typeparam>
            <typeparam name="TFact16">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="T:GetcuReone.FactFactory.Helpers.FactFactoryHelper">
            <summary>
            Helper for <see cref="T:GetcuReone.FactFactory.FactFactoryBase`5"/>
            </summary>
        </member>
        <member name="T:GetcuReone.FactFactory.InnerEntities.Enums.TreeStatus">
            <summary>
            Tree build status.
            </summary>
        </member>
        <member name="F:GetcuReone.FactFactory.InnerEntities.Enums.TreeStatus.BeingBuilt">
            <summary>
            Tree is being built.
            </summary>
        </member>
        <member name="F:GetcuReone.FactFactory.InnerEntities.Enums.TreeStatus.Built">
            <summary>
            Tree built.
            </summary>
        </member>
        <member name="F:GetcuReone.FactFactory.InnerEntities.Enums.TreeStatus.Cencel">
            <summary>
            The tree is canceled.
            </summary>
        </member>
    </members>
</doc>
