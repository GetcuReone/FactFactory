<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FactFactory</name>
    </assembly>
    <members>
        <member name="T:GetcuReone.FactFactory.FactBase">
            <summary>
            Base class for fact.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.FactBase.GetFactType">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactBase.AddParameter(GetcuReone.FactFactory.Interfaces.IFactParameter)">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactBase.GetParameter(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:GetcuReone.FactFactory.FactBase`1">
            /// <inheritdoc/>
            <typeparam name="TFactValue">Type fact value.</typeparam>
        </member>
        <member name="P:GetcuReone.FactFactory.FactBase`1.Value">
            <summary>
            Value fact.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.FactBase`1.#ctor(`0)">
            <summary>
            Constructor.
            </summary>
            <param name="value">Fact value.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactBase`1.op_Implicit(GetcuReone.FactFactory.FactBase{`0})~`0">
            <summary>
            Extract <see cref="P:GetcuReone.FactFactory.FactBase`1.Value"/>.
            </summary>
            <param name="fact"></param>
        </member>
        <member name="T:GetcuReone.FactFactory.FactFactory">
            <summary>
            Factory default implementation.
            </summary>
        </member>
        <member name="P:GetcuReone.FactFactory.FactFactory.Rules">
            <summary>
            Collection of rules for derive facts
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactory.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactory.#ctor(System.Func{GetcuReone.FactFactory.Interfaces.Context.IWantActionContext{GetcuReone.FactFactory.Entities.WantAction,GetcuReone.FactFactory.Entities.FactContainer},System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact}})">
            <summary>
            Constructor.
            </summary>
            <param name="getDefaultFactsFunc">Function that returns a list of facts by default.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactory.GetDefaultContainer">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactory.GetDefaultFacts(GetcuReone.FactFactory.Interfaces.Context.IWantActionContext{GetcuReone.FactFactory.Entities.WantAction,GetcuReone.FactFactory.Entities.FactContainer})">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactory.CreateWantAction(System.Action{System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact}},System.Collections.Generic.List{GetcuReone.FactFactory.Interfaces.IFactType},GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactory.CreateWantAction(System.Func{System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact},System.Threading.Tasks.ValueTask},System.Collections.Generic.List{GetcuReone.FactFactory.Interfaces.IFactType},GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <inheritdoc/>
        </member>
        <member name="T:GetcuReone.FactFactory.FactFactoryBase`4">
            <summary>
            Base class for fact factory.
            </summary>
        </member>
        <member name="P:GetcuReone.FactFactory.FactFactoryBase`4.WantFactsInfos">
            <summary>
            WantFacts.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.CreateObject``2(System.Func{``0,``1},``0)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException">if <paramref name="factoryFunc"/> is null.</exception>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.CreateObjectAsync``2(System.Func{``0,System.Threading.Tasks.ValueTask{``1}},``0)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException">if <paramref name="factoryFunc"/> is null.</exception>
        </member>
        <member name="P:GetcuReone.FactFactory.FactFactoryBase`4.Rules">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.GetFacade``1">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.GetFactType``1">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.GetDefaultFacts(GetcuReone.FactFactory.Interfaces.Context.IWantActionContext{`2,`3})">
            <summary>
            Return the fact set that will be contained in the default container.
            </summary>
            <param name="context">Context.</param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.Derive">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.DeriveAsync">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.DeriveFact``1(`3)">
            <summary>
            Derive <typeparamref name="TFactResult"/>.
            </summary>
            <typeparam name="TFactResult">Type of desired fact.</typeparam>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.DeriveFactAsync``1(`3)">
            <summary>
            Derive <typeparamref name="TFactResult"/>.
            </summary>
            <typeparam name="TFactResult">Type of desired fact.</typeparam>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.GetDefaultContainer">
            <summary>
            Get default container.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.GetTreeBuildingOperations">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.GetSingleEntityOperations">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.GetFactTypeCache">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.CreateWantAction(System.Action{System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact}},System.Collections.Generic.List{GetcuReone.FactFactory.Interfaces.IFactType},GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Creation method <typeparamref name="TWantAction"/>.
            </summary>
            <param name="wantAction">Action taken after deriving a fact.</param>
            <param name="factTypes">Facts required to launch an action.</param>
            <param name="option">WantAction option.</param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.CreateWantAction(System.Func{System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact},System.Threading.Tasks.ValueTask},System.Collections.Generic.List{GetcuReone.FactFactory.Interfaces.IFactType},GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Creation method <typeparamref name="TWantAction"/>.
            </summary>
            <param name="wantAction">Action taken after deriving a fact.</param>
            <param name="factTypes">Facts required to launch an action.</param>
            <param name="option">WantAction option.</param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts(`2,`3)">
            <summary>
            Requesting a desired fact through action.
            </summary>
            <param name="wantAction"></param>
            <param name="container"></param>
            <exception cref="T:GetcuReone.FactFactory.Exceptions.FactFactoryException">The action has already been requested before.</exception>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``1(System.Action{``0},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``2(System.Action{``0,``1},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``3(System.Action{``0,``1,``2},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``4(System.Action{``0,``1,``2,``3},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``5(System.Action{``0,``1,``2,``3,``4},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``6(System.Action{``0,``1,``2,``3,``4,``5},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``7(System.Action{``0,``1,``2,``3,``4,``5,``6},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``8(System.Action{``0,``1,``2,``3,``4,``5,``6,``7},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``9(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``10(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``11(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``12(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``13(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <typeparam name="TFact13">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``14(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <typeparam name="TFact13">Type fact.</typeparam>
            <typeparam name="TFact14">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``15(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <typeparam name="TFact13">Type fact.</typeparam>
            <typeparam name="TFact14">Type fact.</typeparam>
            <typeparam name="TFact15">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``16(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <typeparam name="TFact13">Type fact.</typeparam>
            <typeparam name="TFact14">Type fact.</typeparam>
            <typeparam name="TFact15">Type fact.</typeparam>
            <typeparam name="TFact16">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``1(System.Func{``0,System.Threading.Tasks.ValueTask},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <param name="wantFactActionAsync">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``2(System.Func{``0,``1,System.Threading.Tasks.ValueTask},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <param name="wantFactActionAsync">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``3(System.Func{``0,``1,``2,System.Threading.Tasks.ValueTask},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <param name="wantFactActionAsync">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``4(System.Func{``0,``1,``2,``3,System.Threading.Tasks.ValueTask},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <param name="wantFactActionAsync">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``5(System.Func{``0,``1,``2,``3,``4,System.Threading.Tasks.ValueTask},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <param name="wantFactActionAsync">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``6(System.Func{``0,``1,``2,``3,``4,``5,System.Threading.Tasks.ValueTask},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <param name="wantFactActionAsync">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``7(System.Func{``0,``1,``2,``3,``4,``5,``6,System.Threading.Tasks.ValueTask},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <param name="wantFactActionAsync">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,System.Threading.Tasks.ValueTask},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <param name="wantFactActionAsync">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``9(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Threading.Tasks.ValueTask},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <param name="wantFactActionAsync">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Threading.Tasks.ValueTask},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <param name="wantFactActionAsync">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Threading.Tasks.ValueTask},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <param name="wantFactActionAsync">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Threading.Tasks.ValueTask},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <param name="wantFactActionAsync">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Threading.Tasks.ValueTask},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <typeparam name="TFact13">Type fact.</typeparam>
            <param name="wantFactActionAsync">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Threading.Tasks.ValueTask},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <typeparam name="TFact13">Type fact.</typeparam>
            <typeparam name="TFact14">Type fact.</typeparam>
            <param name="wantFactActionAsync">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Threading.Tasks.ValueTask},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <typeparam name="TFact13">Type fact.</typeparam>
            <typeparam name="TFact14">Type fact.</typeparam>
            <typeparam name="TFact15">Type fact.</typeparam>
            <param name="wantFactActionAsync">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFacts``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Threading.Tasks.ValueTask},`3,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <typeparam name="TFact13">Type fact.</typeparam>
            <typeparam name="TFact14">Type fact.</typeparam>
            <typeparam name="TFact15">Type fact.</typeparam>
            <typeparam name="TFact16">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
            <param name="container">Fact container.</param>
            <param name="option">FactWork options.</param>
        </member>
        <member name="T:GetcuReone.FactFactory.Helpers.InnerFactFactoryHelper">
            <summary>
            Helper for <see cref="T:GetcuReone.FactFactory.FactFactoryBase`4"/>
            </summary>
        </member>
        <member name="T:GetcuReone.FactFactory.SpecialFacts.CanDerived`1">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.SpecialFacts.CanDerived`1.Condition``4(``0,System.Collections.Generic.IEnumerable{``1},GetcuReone.FactFactory.Interfaces.Context.IWantActionContext{``2,``3})">
            <inheritdoc/>
        </member>
        <member name="T:GetcuReone.FactFactory.SpecialFacts.CannotDerived`1">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.SpecialFacts.CannotDerived`1.Condition``4(``0,System.Collections.Generic.IEnumerable{``1},GetcuReone.FactFactory.Interfaces.Context.IWantActionContext{``2,``3})">
            <inheritdoc/>
        </member>
        <member name="T:GetcuReone.FactFactory.SpecialFacts.ConditionFactBase">
            <summary>
            Base class for <see cref="T:GetcuReone.FactFactory.Interfaces.SpecialFacts.IConditionFact"/>.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.SpecialFacts.ConditionFactBase.Condition``4(``0,System.Collections.Generic.IEnumerable{``1},GetcuReone.FactFactory.Interfaces.Context.IWantActionContext{``2,``3})">
            <inheritdoc/>
        </member>
        <member name="T:GetcuReone.FactFactory.SpecialFacts.ConditionFactBase`1">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.SpecialFacts.ConditionFactBase`1.GetFactType``1">
            <inheritdoc/>
        </member>
        <member name="T:GetcuReone.FactFactory.SpecialFacts.Contained`1">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.SpecialFacts.Contained`1.Condition``4(``0,System.Collections.Generic.IEnumerable{``1},GetcuReone.FactFactory.Interfaces.Context.IWantActionContext{``2,``3})">
            <inheritdoc/>
        </member>
        <member name="T:GetcuReone.FactFactory.SpecialFacts.NotContained`1">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.SpecialFacts.NotContained`1.Condition``4(``0,System.Collections.Generic.IEnumerable{``1},GetcuReone.FactFactory.Interfaces.Context.IWantActionContext{``2,``3})">
            <inheritdoc/>
        </member>
        <member name="T:GetcuReone.FactFactory.SpecialFacts.SpecialFactBase">
            <summary>
            Base class for <see cref="T:GetcuReone.FactFactory.Interfaces.SpecialFacts.ISpecialFact"/>.
            </summary>
        </member>
    </members>
</doc>
