<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FactFactory</name>
    </assembly>
    <members>
        <member name="T:GetcuReone.FactFactory.FactFactory">
            <summary>
            Factory default implementation.
            </summary>
        </member>
        <member name="P:GetcuReone.FactFactory.FactFactory.Container">
            <summary>
            Fact container.
            </summary>
        </member>
        <member name="P:GetcuReone.FactFactory.FactFactory.Rules">
            <summary>
            Collection of rules for derive facts
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactory.CreateWantAction(System.Action{GetcuReone.FactFactory.Interfaces.IFactContainer},System.Collections.Generic.List{GetcuReone.FactFactory.Interfaces.IFactType})">
            <summary>
            creation method <see cref="T:GetcuReone.FactFactory.Entities.WantAction"/>
            </summary>
            <param name="wantAction">Action taken after deriving a fact.</param>
            <param name="factTypes">Facts required to launch an action.</param>
            <returns></returns>
        </member>
        <member name="T:GetcuReone.FactFactory.FactFactoryBase`4">
            <summary>
            Base class for fact factory.
            </summary>
        </member>
        <member name="P:GetcuReone.FactFactory.FactFactoryBase`4.WantActions">
            <summary>
            Want actions
            </summary>
        </member>
        <member name="P:GetcuReone.FactFactory.FactFactoryBase`4.Container">
            <inheritdoc/>
        </member>
        <member name="P:GetcuReone.FactFactory.FactFactoryBase`4.Rules">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.GetFacade``1">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.GetFactType``1">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.GetDefaultFacts(`3)">
            <summary>
            Return the fact set that will be contained in the default container.
            </summary>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.Derive">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.DeriveFact``1">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.GetSingleEntityOperations">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.GetFactTypeCache">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.BuildTrees(GetcuReone.FactFactory.Entities.Trees.BuildTreesRequest{`0,`1,`2,`3},GetcuReone.FactFactory.Interfaces.Context.IFactFactoryContext)">
            <summary>
            Build trees for wantActions.
            </summary>
            <param name="request"></param>
            <param name="context"></param>
            <exception cref="T:GetcuReone.FactFactory.Exceptions.InvalidDeriveOperationException">Mistakes in building trees.</exception>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.CalculateTreeAndDeriveWantFacts(GetcuReone.FactFactory.Entities.Trees.WantActionInfo{`2,`3},System.Collections.Generic.List{GetcuReone.FactFactory.Entities.Trees.TreeByFactRule{`0,`2,`3}})">
            <summary>
            Tree calculation and fact deriving.
            </summary>
            <param name="wantActionInfo"></param>
            <param name="trees"></param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.OnWantActionCalculated(`2,`3)">
            <summary>
            Action calculation completion handler
            </summary>
            <param name="wantAction"></param>
            <param name="container"></param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.OnFactCalculatedForWantAction(GetcuReone.FactFactory.Interfaces.IFactType,`3,`2)">
            <summary>
            Fact calculation event handler for an <paramref name="wantAction"/>.
            </summary>
            <param name="factType">Type calculated fact.</param>
            <param name="container">Container.</param>
            <param name="wantAction">The action for which the fact was calculated.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.OnDeriveFinished(System.Collections.Generic.List{`2},`3)">
            <summary>
            Event handler method 'derive finished'. It is executed at the end of the <see cref="M:GetcuReone.FactFactory.FactFactoryBase`4.Derive"/> method.
            </summary>
            <param name="wantActions">List of desired actions.</param>
            <param name="container">Container.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.CreateWantAction(System.Action{GetcuReone.FactFactory.Interfaces.IFactContainer},System.Collections.Generic.List{GetcuReone.FactFactory.Interfaces.IFactType})">
            <summary>
            Creation method <typeparamref name="TWantAction"/>.
            </summary>
            <param name="wantAction">Action taken after deriving a fact.</param>
            <param name="factTypes">Facts required to launch an action.</param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.NeedRecalculateFact(`0,`3,`2,GetcuReone.FactFactory.Interfaces.IFact@)">
            <summary>
            The method determines whether the fact should be recounted.
            </summary>
            <param name="rule">Rule for calculating the fact.</param>
            <param name="container">Fact container.</param>
            <param name="wantAction">The initial action for which the parameters are calculated.</param>
            <param name="needRemoveFact">If the method returns the true, then this fact will be removed from the container. There will be no deletion if the fact is empty.</param>
            <returns>True - fact needs to be recalculated.</returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.TryBuildTreesForWantAction(GetcuReone.FactFactory.Entities.Trees.BuildTreesForWantActionRequest{`0,`2,`3},GetcuReone.FactFactory.Interfaces.Context.IFactRulesContext,System.Collections.Generic.List{GetcuReone.FactFactory.Entities.Trees.TreeByFactRule{`0,`2,`3}}@,GetcuReone.FactFactory.Exceptions.Entities.DeriveErrorDetail@)">
            <summary>
            Trye build tree for wantAction.
            </summary>
            <param name="request"></param>
            <param name="treesResult">Build trees.</param>
            <param name="deriveErrorDetail">Mistakes in building trees.</param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.TryBuildTreeForFactInfo(GetcuReone.FactFactory.Entities.Trees.BuildTreeForFactTypeRequest{`0,`2,`3},GetcuReone.FactFactory.Entities.Trees.TreeByFactRule{`0,`2,`3}@,System.Collections.Generic.List{GetcuReone.FactFactory.Exceptions.Entities.DeriveFactErrorDetail}@)">
            <summary>
            Try build tree for wantFact from wantAcction.
            </summary>
            <param name="request"></param>
            <param name="treeResult">Build tree.</param>
            <param name="deriveFactErrorDetails">Errors that occurred while building a tree.</param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.GetCorrectFact``1(GetcuReone.FactFactory.Interfaces.IFactContainer,System.Collections.Generic.IReadOnlyCollection{GetcuReone.FactFactory.Interfaces.IFactType})">
            <summary>
            Return the correct fact.
            </summary>
            <typeparam name="TFact"></typeparam>
            <param name="container"></param>
            <param name="inputFactTypes"></param>
            <returns></returns>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFact(`2)">
            <summary>
            Requesting a desired fact through action.
            </summary>
            <param name="wantAction"></param>
            <exception cref="T:GetcuReone.FactFactory.Exceptions.FactFactoryException">The action has already been requested before.</exception>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFact``1(System.Action{``0})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFact``2(System.Action{``0,``1})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFact``3(System.Action{``0,``1,``2})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFact``4(System.Action{``0,``1,``2,``3})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFact``5(System.Action{``0,``1,``2,``3,``4})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFact``6(System.Action{``0,``1,``2,``3,``4,``5})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFact``7(System.Action{``0,``1,``2,``3,``4,``5,``6})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFact``8(System.Action{``0,``1,``2,``3,``4,``5,``6,``7})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFact``9(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFact``10(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFact``11(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFact``12(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFact``13(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <typeparam name="TFact13">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFact``14(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <typeparam name="TFact13">Type fact.</typeparam>
            <typeparam name="TFact14">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFact``15(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <typeparam name="TFact13">Type fact.</typeparam>
            <typeparam name="TFact14">Type fact.</typeparam>
            <typeparam name="TFact15">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.FactFactoryBase`4.WantFact``16(System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15})">
            <summary>
            Requesting desired facts through action.
            </summary>
            <typeparam name="TFact1">Type fact.</typeparam>
            <typeparam name="TFact2">Type fact.</typeparam>
            <typeparam name="TFact3">Type fact.</typeparam>
            <typeparam name="TFact4">Type fact.</typeparam>
            <typeparam name="TFact5">Type fact.</typeparam>
            <typeparam name="TFact6">Type fact.</typeparam>
            <typeparam name="TFact7">Type fact.</typeparam>
            <typeparam name="TFact8">Type fact.</typeparam>
            <typeparam name="TFact9">Type fact.</typeparam>
            <typeparam name="TFact10">Type fact.</typeparam>
            <typeparam name="TFact11">Type fact.</typeparam>
            <typeparam name="TFact12">Type fact.</typeparam>
            <typeparam name="TFact13">Type fact.</typeparam>
            <typeparam name="TFact14">Type fact.</typeparam>
            <typeparam name="TFact15">Type fact.</typeparam>
            <typeparam name="TFact16">Type fact.</typeparam>
            <param name="wantFactAction">Desired action.</param>
        </member>
        <member name="T:GetcuReone.FactFactory.Helpers.FactFactoryHelper">
            <summary>
            Helper for <see cref="T:GetcuReone.FactFactory.FactFactoryBase`4"/>
            </summary>
        </member>
    </members>
</doc>
