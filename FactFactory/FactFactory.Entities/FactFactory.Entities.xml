<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FactFactory.Entities</name>
    </assembly>
    <members>
        <member name="T:GetcuReone.FactFactory.Entities.FactContainer">
            <summary>
            Fact collection.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Entities.FactContainer.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Entities.FactContainer.#ctor(System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact})">
            <summary>
            Constructor.
            </summary>
            <param name="facts">An array of facts to add to the container.</param>
        </member>
        <member name="M:GetcuReone.FactFactory.Entities.FactContainer.#ctor(System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact},System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="facts">An array of facts to add to the container.</param>
            <param name="isReadOnly"></param>
        </member>
        <member name="T:GetcuReone.FactFactory.Entities.FactParameter">
            <summary>
            Fact parameter.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Entities.FactParameter.#ctor(System.String,System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="code"></param>
            <param name="value"></param>
        </member>
        <member name="T:GetcuReone.FactFactory.Entities.FactRule">
            <summary>
            Rule of fact calculation.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Entities.FactRule.#ctor(System.Func{System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact},GetcuReone.FactFactory.Interfaces.IFact},System.Collections.Generic.List{GetcuReone.FactFactory.Interfaces.IFactType},GetcuReone.FactFactory.Interfaces.IFactType,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Entities.FactRule.#ctor(System.Func{System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact},System.Threading.Tasks.ValueTask{GetcuReone.FactFactory.Interfaces.IFact}},System.Collections.Generic.List{GetcuReone.FactFactory.Interfaces.IFactType},GetcuReone.FactFactory.Interfaces.IFactType,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <inheritdoc/>
        </member>
        <member name="T:GetcuReone.FactFactory.Entities.FactRuleCollection">
            <summary>
            Collection for <see cref="T:GetcuReone.FactFactory.Entities.FactRule"/>.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Entities.FactRuleCollection.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Entities.FactRuleCollection.#ctor(System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Entities.FactRule})">
            <summary>
            Constructor.
            </summary>
            <param name="factRules"></param>
        </member>
        <member name="M:GetcuReone.FactFactory.Entities.FactRuleCollection.#ctor(System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Entities.FactRule},System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="factRules"></param>
            <param name="isReadOnly"></param>
        </member>
        <member name="M:GetcuReone.FactFactory.Entities.FactRuleCollection.Copy">
            <summary>
            <see cref="T:GetcuReone.FactFactory.BaseEntities.FactRuleCollectionBase`1"/> copy method.
            </summary>
            <returns>Copied <see cref="T:GetcuReone.FactFactory.Entities.FactRuleCollection"/>.</returns>
        </member>
        <member name="M:GetcuReone.FactFactory.Entities.FactRuleCollection.CreateFactRule(System.Func{System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact},GetcuReone.FactFactory.Interfaces.IFact},System.Collections.Generic.List{GetcuReone.FactFactory.Interfaces.IFactType},GetcuReone.FactFactory.Interfaces.IFactType,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Entities.FactRuleCollection.CreateFactRule(System.Func{System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact},System.Threading.Tasks.ValueTask{GetcuReone.FactFactory.Interfaces.IFact}},System.Collections.Generic.List{GetcuReone.FactFactory.Interfaces.IFactType},GetcuReone.FactFactory.Interfaces.IFactType,GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <inheritdoc/>
        </member>
        <member name="T:GetcuReone.FactFactory.Entities.WantAction">
            <summary>
            Desired action information.
            </summary>
        </member>
        <member name="M:GetcuReone.FactFactory.Entities.WantAction.#ctor(System.Action{System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact}},System.Collections.Generic.List{GetcuReone.FactFactory.Interfaces.IFactType},GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <inheritdoc/>
        </member>
        <member name="M:GetcuReone.FactFactory.Entities.WantAction.#ctor(System.Func{System.Collections.Generic.IEnumerable{GetcuReone.FactFactory.Interfaces.IFact},System.Threading.Tasks.ValueTask},System.Collections.Generic.List{GetcuReone.FactFactory.Interfaces.IFactType},GetcuReone.FactFactory.Interfaces.FactWorkOption)">
            <inheritdoc/>
        </member>
    </members>
</doc>
